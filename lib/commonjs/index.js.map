{"version":3,"names":["AliOss","NativeModules","subscription","conf","maxRetryCount","timeoutIntervalForRequest","timeoutIntervalForResource","imageXOssProcess","partSize","mulitpartUploadConfig","appendOptions","appendPosition","contentType","contentMd5","contentEncoding","contentDisposition","AliyunOSS","enableDevMode","initWithPlainTextAccessKey","accessKey","secretKey","endPoint","configuration","initWithImplementedSigner","signature","initWithSecurityToken","securityToken","initWithServerSTS","server","asyncUpload","bucketName","objectKey","filepath","options","asyncResumableUpload","asyncAppendObject","initMultipartUpload","multipartUpload","uploadId","listParts","abortMultipartUpload","asyncDownload","asyncListBuckets","asyncHeadObject","asyncListObjects","asyncCopyObject","srcBucketName","srcObjectKey","desBucketName","destObjectKey","doesObjectExist","asyncDeleteObject","asyncCreateBucket","acl","region","asyncGetBucketACL","asyncDeleteBucket","addEventListener","event","callback","RNAliyunEmitter","Platform","OS","NativeEventEmitter","DeviceEventEmitter","addListener","e","removeEventListener","remove"],"sources":["index.tsx"],"sourcesContent":["import {\r\n  DeviceEventEmitter,\r\n  NativeEventEmitter,\r\n  NativeModules,\r\n  Platform,\r\n  EmitterSubscription,\r\n} from 'react-native';\r\n\r\nconst { AliOss } = NativeModules;\r\n\r\nlet subscription: EmitterSubscription;\r\n\r\ntype OSSinit = {\r\n  maxRetryCount: number;\r\n  timeoutIntervalForRequest: number;\r\n  timeoutIntervalForResource: number;\r\n};\r\n\r\ntype OssListOptions = {\r\n  prefix: string;\r\n  marker?: string;\r\n  maxKeys?: string;\r\n  delimiter?: string;\r\n};\r\n\r\n//default configuration for OSS Client\r\nconst conf: OSSinit = {\r\n  maxRetryCount: 3,\r\n  timeoutIntervalForRequest: 30,\r\n  timeoutIntervalForResource: 24 * 60 * 60,\r\n};\r\n\r\nconst imageXOssProcess = {\r\n  'x-oss-process': '',\r\n};\r\n\r\nlet partSize = 128 * 1024;\r\nconst mulitpartUploadConfig = {\r\n  partSize: partSize,\r\n};\r\ntype AppendType = {\r\n  appendPosition: number;\r\n  contentType: string;\r\n  contentMd5: string;\r\n  contentEncoding: string;\r\n  contentDisposition: string;\r\n};\r\n\r\n//appendObject\r\nconst appendOptions: AppendType = {\r\n  appendPosition: 0,\r\n  contentType: '',\r\n  contentMd5: '',\r\n  contentEncoding: '',\r\n  contentDisposition: '',\r\n};\r\n\r\nconst AliyunOSS = {\r\n  //Enable dev mode\r\n  enableDevMode() {\r\n    AliOss.enableDevMode();\r\n  },\r\n\r\n  /**\r\n   * Initialize the OSS Client\r\n   * Mode: PlainTextAKSK\r\n   */\r\n  initWithPlainTextAccessKey(\r\n    accessKey: string,\r\n    secretKey: string,\r\n    endPoint: string,\r\n    configuration = conf\r\n  ) {\r\n    AliOss.initWithPlainTextAccessKey(\r\n      accessKey,\r\n      secretKey,\r\n      endPoint,\r\n      configuration\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initialize the OSS Client\r\n   * Mode: ImplementedSigner\r\n   */\r\n  initWithImplementedSigner(\r\n    signature: string,\r\n    accessKey: string,\r\n    endPoint: string,\r\n    configuration = conf\r\n  ) {\r\n    AliOss.initWithImplementedSigner(\r\n      signature,\r\n      accessKey,\r\n      endPoint,\r\n      configuration\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initialize the OSS Client\r\n   * Mode: SecurityToken (STS)\r\n   */\r\n  initWithSecurityToken(\r\n    securityToken: string,\r\n    accessKey: string,\r\n    secretKey: string,\r\n    endPoint: string,\r\n    configuration = conf\r\n  ) {\r\n    AliOss.initWithSecurityToken(\r\n      securityToken,\r\n      accessKey,\r\n      secretKey,\r\n      endPoint,\r\n      configuration\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Initialize the OSS Client\r\n   * Server STS\r\n   */\r\n  initWithServerSTS(server: string, endPoint: string, configuration = conf) {\r\n    AliOss.initWithServerSTS(server, endPoint, configuration);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously uploading\r\n   */\r\n  asyncUpload(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    filepath: string,\r\n    options = {}\r\n  ): Promise<any> {\r\n    return AliOss.asyncUpload(bucketName, objectKey, filepath, options);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously\r\n   */\r\n  asyncResumableUpload(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    filepath = '',\r\n    options = {}\r\n  ): Promise<any> {\r\n    return AliOss.asyncResumableUpload(\r\n      bucketName,\r\n      objectKey,\r\n      filepath,\r\n      options\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Asynchronously asyncAppendObject\r\n   */\r\n  asyncAppendObject(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    filepath: string,\r\n    options = appendOptions\r\n  ): Promise<any> {\r\n    return AliOss.asyncAppendObject(bucketName, objectKey, filepath, options);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously\r\n   */\r\n  initMultipartUpload(bucketName: string, objectKey: string): Promise<any> {\r\n    return AliOss.initMultipartUpload(bucketName, objectKey);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously multipartUpload\r\n   */\r\n  multipartUpload(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    uploadId: string,\r\n    filepath = '',\r\n    options = mulitpartUploadConfig\r\n  ): Promise<any> {\r\n    return AliOss.multipartUpload(\r\n      bucketName,\r\n      objectKey,\r\n      uploadId,\r\n      filepath,\r\n      options\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Asynchronously listParts\r\n   */\r\n  listParts(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    uploadId: string\r\n  ): Promise<any> {\r\n    return AliOss.listParts(bucketName, objectKey, uploadId);\r\n  },\r\n  /**\r\n   * Asynchronously abortMultipartUpload\r\n   */\r\n  abortMultipartUpload(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    uploadId: string\r\n  ): Promise<any> {\r\n    return AliOss.abortMultipartUpload(bucketName, objectKey, uploadId);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously downloading\r\n   */\r\n  asyncDownload(\r\n    bucketName: string,\r\n    objectKey: string,\r\n    filepath = '',\r\n    options = imageXOssProcess\r\n  ): Promise<any> {\r\n    return AliOss.asyncDownload(bucketName, objectKey, filepath, options);\r\n  },\r\n\r\n  /*\r\n    asyncListBuckets\r\n    */\r\n\r\n  asyncListBuckets(): Promise<any> {\r\n    return AliOss.asyncListBuckets();\r\n  },\r\n\r\n  /**\r\n   * Asynchronously getHeadObject\r\n   */\r\n\r\n  asyncHeadObject(bucketName: string, objectKey: string): Promise<any> {\r\n    return AliOss.asyncHeadObject(bucketName, objectKey);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously getAsyncObjects\r\n   */\r\n\r\n  asyncListObjects(bucketName: string, options?: OssListOptions): Promise<any> {\r\n    return AliOss.asyncListObjects(bucketName, options);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously asyncCopyObject\r\n   */\r\n\r\n  asyncCopyObject(\r\n    srcBucketName: string,\r\n    srcObjectKey: string,\r\n    desBucketName: string,\r\n    destObjectKey: string,\r\n    options: any\r\n  ): Promise<any> {\r\n    return AliOss.asyncCopyObject(\r\n      srcBucketName,\r\n      srcObjectKey,\r\n      desBucketName,\r\n      destObjectKey,\r\n      options\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Asynchronously doesObjectExist\r\n   */\r\n\r\n  doesObjectExist(bucketName: string, objectKey: string): Promise<any> {\r\n    return AliOss.doesObjectExist(bucketName, objectKey);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously asyncDeleteObject\r\n   */\r\n\r\n  asyncDeleteObject(bucketName: string, objectKey: string): Promise<any> {\r\n    return AliOss.asyncDeleteObject(bucketName, objectKey);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously createBucket\r\n   */\r\n  asyncCreateBucket(\r\n    bucketName: string,\r\n    acl = 'private',\r\n    region: string\r\n  ): Promise<any> {\r\n    return AliOss.asyncCreateBucket(bucketName, acl, region);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously getBucketACL\r\n   */\r\n  asyncGetBucketACL(bucketName: string): Promise<any> {\r\n    return AliOss.asyncGetBucketACL(bucketName);\r\n  },\r\n\r\n  /**\r\n   * Asynchronously deleteBucket\r\n   */\r\n  asyncDeleteBucket(bucketName: string): Promise<any> {\r\n    return AliOss.asyncDeleteBucket(bucketName);\r\n  },\r\n\r\n  /**\r\n   * event listener for native upload/download event\r\n   * @param event one of 'uploadProgress' or 'downloadProgress'\r\n   * @param callback a callback function accepts one params: event\r\n   */\r\n  addEventListener(event: any, callback: any) {\r\n    const RNAliyunEmitter =\r\n      Platform.OS === 'ios'\r\n        ? new NativeEventEmitter(AliOss)\r\n        : DeviceEventEmitter;\r\n    switch (event) {\r\n      case 'uploadProgress':\r\n        subscription = RNAliyunEmitter.addListener('uploadProgress', (e) =>\r\n          callback(e)\r\n        );\r\n        break;\r\n      case 'downloadProgress':\r\n        subscription = RNAliyunEmitter.addListener('downloadProgress', (e) =>\r\n          callback(e)\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * remove event listener for native upload/download event\r\n   * @param event one of 'uploadProgress' or 'downloadProgress'\r\n   */\r\n  removeEventListener(event: any) {\r\n    switch (event) {\r\n      case 'uploadProgress':\r\n        subscription.remove();\r\n        break;\r\n      case 'downloadProgress':\r\n        subscription.remove();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n};\r\nexport { AliyunOSS };\r\n"],"mappings":"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"}